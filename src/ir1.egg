(datatype Value (Index i64) (Sample f64) (VUnit))
(datatype Expr
    (Var i64)
    (Val Value)
    (Glob i64)
    (Lam Expr)
    (App Expr Expr)
    (Box Expr)
    (Unbox Expr)
    (Lob Expr)
    (Let Expr Expr)
    (If Expr Expr Expr)
    (Delay Expr)
    (Adv Expr))

(datatype ExprList (ELCons Expr ExprList) (ELNil))

(datatype OpT
    (FAdd)
    (FSub)
    (FMul)
    (FDiv)
    (FGt)
    (FGe)
    (FLt)
    (FLe)
    (FEq)
    (FNe)
    (Sin)
    (Cos)
    (Pi)
    (IAdd)
    (ISub)
    (IMul)
    (IDiv)
    (Shl)
    (Shr)
    (And)
    (Xor)
    (Or)
    (IGt)
    (IGe)
    (ILt)
    (ILe)
    (IEq)
    (INe)
    (ReinterpF2I)
    (ReinterpI2F)
    (CastI2F)
    (Proj i64)
    (UnGen)
    (AllocAndFill)
    (AllocF32)
    (AllocI32)
;; (declare BuildClosure(Global) OpT)
;; (declare LoadGlobal(Global) OpT)
    (DerefF32)
    (DerefI32)
    (ApplyCoeff i64 i64)
    (SinceLastTickStream)
    (Advance)
    (Wait)
    (Schedule)
    (MakeClock f64)
    (GetClock i64))

(datatype ConT
    (Stream)
    (Array)
    (Pair)
    (InL)
    (InR)
    (ClockEx))

(function Op (OpT ExprList) Expr)
(function Con (ConT ExprList) Expr)

(function clock (String) Expr :cost 100000000)
(function program (String) Expr :cost 100000000)

;; the *most basic* optimization
(rewrite (Op (DerefF32) (ELCons (Op (AllocF32) (ELCons e ELNil)) ELNil)) e)
(rewrite (Op (AllocF32) (ELCons (Op (DerefF32) (ELCons e ELNil)) ELNil)) e)
