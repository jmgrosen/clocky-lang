def sinsig: for k : clock. ~^(k) sample -> ~^(k) sample =
  ((&^(k) sinsig. \sigin.
    let (x, siginp) = %sigin in
    sin x :: `(!(unbox sinsig) !siginp)));;
def persamp: sample = 2. * 3.14159 * 440. / 48000.;;
def lin: for k : clock. ~^(k) sample = ((&^(k) s. \x. x :: `(!(unbox s) (x + persamp))) : sample -> ~^(k) sample) 0.0;;

let main: ~^(audio) sample = lin @(audio);;