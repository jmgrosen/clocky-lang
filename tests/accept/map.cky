def mapsig: for k : clock. [](sample -> sample) -> ~^(k) sample -> ~^(k) sample =
  \f. (&^(k) mappedsig. \sigin.
         let (x, siginp) = %sigin in
         (unbox f) x :: `(!(unbox mappedsig) !siginp));;

def lin: for k : clock. ~^(k) sample =
    ((&^(k) s. \x. x :: `(!(unbox s) (x + 1.0))) : sample -> ~^(k) sample) 0.0;;

let main: ~^(audio) sample = mapsig @(audio) (box (\x. sin x))) (lin @(audio));;
